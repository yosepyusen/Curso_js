html{
    box-sizing: border-box;/*box-sizing: dentro del html crea caja de etiqueta, border-box: el borde va ser en forma de caja, encajando dentro del html*/
    font-family: 'Raleway', 'sans-serif';/* palicando tipografia de raleway sino sanserif va detectar */
    font-size: 16px;
}

*,
*:after,
*:before{
 
    box-sizing: inherit;/*inherit, es heredar forzadamente a todo los elementos html */
}

body{
    margin: 0;
    overflow-x: hidden; /* todo desborde en horizontal se oculte y  no nos genere barra de desplazamiento, hidden:esconde un elemento, pero deja (vacío) el espacio donde debería aparecer. */
}
a{
    color: #01579b;
    transition: color 0.3s ease;  /* aplicando una transition al color de tiempo 0.3seg y efecto de aceleracion: ease, all es cuando queremos aplicar a transition a todo creo*/
}

a:hover{
    color: #00b0ff;
}
h1{
    text-align: center;
}
img{
    max-width: 100%;/* para q no se deforme la img */
    height: auto;
}

.error{
    padding: 1rem;
    font-size: 150%;
    font-weight: bold;
    text-align: center;
    color: #fff;
    background-color: #dc3554;
}
.search-form{
    margin: auto;
    text-align: center;
}
.search-form input{ /* dentro del formulario hay input */
    display: block; /*convirtimos en bloque el elemento*/
    margin: auto;
    padding: 0.25rem;
    border-radius: 0.25rem;
    font-size: 1rem;
}

.grid-fluid{
    margin: 1rem auto;
    max-width: 90%;
    display: grid; /* para responsive desing con display grid */
    /*filas se van generar de manera automatica, grid-template-column spara generar columnas */
    grid-template-columns: repeat(auto-fit, minmax(280px,1fr)); 
    /*con funcion repeat decimos cuantas columnas necesito, poner (auto-fit:q se ajusten al # d columnas que haya) */
    /* cada celda de la cualdricula estoy trabajando en espacio cuanto de tamaño max:1fr(es una medida de grid css) y minimo:280px de la columna */
}

.header{
    padding: 0.5rem;
    position: sticky; /* cuando el header llegue a la posicion de cero al margen de top, se va comportar como si estuviera fija */
    top: 0; /*cero para q qde fijo el header*/
    text-align: center;
    background-color: #fff;
}

.header > *{ /* mayor:> en css es el selector de hijos y asterisco:* dice no me importa el tpo de etiqueta, for, nav, asaide mientras sea hija en primer nivel del elemento que tiene la clase header */
     margin: 1rem auto; /* margin de arriba y abajo de 1rem y a los costados un margin auto */
}

.loader{ /*del tail-spin.svg*/
    margin: 1rem auto; /*margin arriba y abajo de 1 rem y automatico a los lados para centrar*/
    display: block;/*en bloques*/
    width: 4rem;
    height: 4rem;
    background-color: black;
}

.post-card{
    margin: 1rem auto;
    padding: 1rem;
    width: 80%;
    background-color: #eceff1;
}
.post-card p{
    display: flex; /* para q se contaren los elementos html  */
    justify-content: space-between; /* dentro de: .post-card p, hay etiqueta time y a, hace q el espacio se divide en dos en cada extremo */
}

.post-page{
    margin: 1rem auto;
    padding: 1rem;
    width: 80%;
    background-color: #eceff1;
}
.post-page > aside{/* mayor(>), mayor de hijos de la clase .post-page q es aside( q es un pequeño cuadro donde se guarda el title y la fecha) */
    margin: auto;
    width: 60%;
    text-align: center;
}

.post-page > hr{
    border: thin solid #4a92b1; /*thin: delgado*/
    margin: 2rem auto;
    width: 80%;
}
.post-page time{
    margin: 1rem auto;
    display: block;
}
.post-page > article{ /*> mayor hijo de la clase, espaciado al contenido del posts*/
    padding: 0 2rem;
}

.post-page img,
.post-page figure,
.post-page audio,
.post-page iframe,
.post-page video { /* todo los img, figure, audio, iframe, video aplicamos los estilos siguientes */
    margin: auto;
    display: block;
    max-width: 100%;
}