/* *{
    margin: 0;
    padding: 0;
} */

/* h1{
    text-align: center;
    padding: 0.5rem;
    background-color: yellow;
} */

:root{ /* entramos a la ruta principal con root y creamos las variables */
    --main-font:sans-serif;
    --font-size:16px;
    --main-color: #f7df1e;
    --second-color: #222;
    --main-modal-color: rgba(247, 222, 30, 0.85);
    --second-modal-color: rgba(34, 34, 34, 0.85);
    --container-width: 1200px;
}

/* creamos un reseteo basico para etiqueta html */
html{
    box-sizing: border-box; /*box-sizing: tamaño de la caja a border-box */
    font-family: var(--main-color);
    font-size: var(--font-size);
    scroll-behavior: smooth;/*esa navegacion, para dar efecto de transision no subita a la hora de que vamos de una seccion a otra */
}

/* todo los elementos de este doc. html hereden el box-sizing, con esto se crea un especie de caja */
*, /*El asterisco (*) es el selector universal en CSS. De forma automática, el asterisco selecciona todos los elementos en un documento*/
*:before, /*con before y after le decimos que herede un documento antes y depues del asterisco(*) */
*:after{
    box-sizing: inherit; /*inherit, es heredar forzadamente */
}


body{/* reseteamos el body con margin cero ya que por defecto tiene 8px */
    margin: 0;
    overflow-x: hidden; /* para que todo que se desborde en horizontal se oculte y  no nos genere barra de desplazamiento, hidden:esconde un elemento, pero deja (vacío) el espacio donde debería aparecer. */
}

img{/*para uso de imgs, */
    max-width: 100%; /*se adapten a la maxima anchura*/
    height: auto;/* height especifica la altura de un elemento */
}

.header{
    /* position: fixed; */ /*nos da una posicion fija y encima de todo los elementos de dicho elemento que se aplico fixed*/
    position: sticky; /* cuando el header llegue a la posicion de cero al margen de top, se va comportar como si estuviera fija */
    top: 0; /* el top cero debe ir con posicion de stycky */
    padding: 0.5rem; /*padding para los 4 lados*/
    background-color: var(--main-color);
    color: var(--second-color); /* color a la letra */
}

.header h1{ /* reseteamos los estilos del h1 que esta dentro de header */
    margin: 0 ; /*margin cero arriba y abajo y automatico a los lados y centrea el texto*/
    text-align: center;
}
.section{
    padding: 2rem; /*paddin a los lados*/
    padding-top: 4rem; /*correjimos a 4rem*/
    margin-left: auto; /*margin left y rigth auto para que al dar maxima anchura(pantallas a mas de 1200)*/
    margin-right: auto;
    width: 100%;
    max-width: var(--container-width); /*1200px*/
    min-height: 100vh; /*minima altura, hace que cada seccion, aunque el contenido sea mas pequeño ocupe el tamaño del view port*/
    text-align: center;
}
/*************************** inicio esilos para menu hamburgesa ****************************/
.panel-btn{
    position: fixed;/*nos da una posicion fija y encima de todo los etiquetas html, y va posicionarse posicionarse a 1vh y 1vw, con esto se va colocar en la esquina derecha*/
    z-index: 999; /*cambiamos la posicion por defecto que static, ya que lo cambies a relative,stiky, puedes jugar con el nivel de profundidad que nos da z-index, con "999" se logra que el boton este por encima de todo los elementos*/ 
    /*z-index:indica el orden de un elemento posicionado y sus descendientes. Cuando varios elementos se superponen, los elementos con mayor valor z-index cubren aquellos con menor valor*/
    bottom: 1vh; /*vh es la unidad de altura de la ventana gráfica representa un porcentaje de la altura de la ventana gráfica. */
    right: 1vw; /* vw es la unidad de ancho de la ventana gráfica representa un porcentaje del ancho de la ventana gráfica. */
    width: 4rem;/* anchura y altura en 4rem=4*16px, es el tamaño del boton*/
    height: 4rem;
    border-radius: 50%; /*redondo el boton*/
    padding: 0%; /*quito padding*/
    display: flex; /*para empiece desde el margen inicial sobre el eje principal, contraerse    ...*/
    justify-content: center; /*ajusta el contenido centro de esas 3 lineas del boton*/
    align-items: center;/*alinea los items de las tres lineas del boton*/
    background-color: var(--main-color);
}

.panel{
    position: fixed;
    z-index: 998;/*este contenido este sobre todo los elementos del html a excepcion de .panel-btn*/
    background-color: var(--second-modal-color);
    width: 100%;
    top: 0; /*hacer alinear a top(alto-desde comienzo) cero y bottom(alto-hasta el final) cero, el top y boton es para estirar el elemento en toda las direcciones y que ocupe toda la ventana algo asi*/
    bottom: 0;
    /*hacemos lo mismo de estirar el ancho ya que el alto estiramos con top y bottom: */
    left: 0;
    right: 0;/*con to,bottom, left, rigth, hacemos que tenga una anchura del 100% y altura del 100%*/
    
    opacity: 0; /*opacidad del boton*/
    visibility: hidden;/*cuando agregamos opacity, añadimos visibilidad y con hidden que esconde, pero deja (vacío) el espacio donde debería aparecer*/

    transition: transform 0.3s ease, opacity 0.5s ease;/* para da una transicion de aceleracion 0.3seg y si aplica opacity a cero entonces le damos transicion y en clase: .panel.is-active(poniendo opacity: 1;)*/
    
    /*SI UTILIZAMOS translate, YA NO USAMOS opacity O AL REVEZ*/
    
    /*transform: translate(0,-100%); /*si quieres que el menu salga de ARRIBA a ABAJO decimos cero para q "X" no se mueva, pero en "Y", que se mueva a -100%, no desaparecio el menu sino que esta arriba por eso no se ve, como quieras que se mueva de x e y con transform*/
    /*transform: translate(0,100%);/*menu salga de ABAJO a ARRIBA*/
    /*transform: translate(100%,0);/*menu salga de DERECHA a IZQUIERDA*/
    /*transform: translate(-100%,0);/*menu salga de IZQUIERDA a DERECHA*/

    /*overflow-y: auto;/* todo que se desborde en vertical se acomoda automaticamente, mas que todo es para que crea una barra vertical dentro del panel hamburguer */
}

.panel.is-active{ /*creamos una clase para que, para agregar o quitar a la clase .panel*/
    /*transform: translate(0,0); /*cuando esta activado el panel regrese a su posicion cero*/
    opacity: 1;/*en clase .panel le dimos opacity cero ahora a aqui le damos opacity a 1*/
    visibility: visible;/*si agregamos en clase .panel visibility: hidden, entonces al activar este boton sea visible*/
}
/* 

.panel-btn *{ //con esto le decimos todo o que se encuentre dentro de la clase .panel-btn, y los estilos van aplicar, no importa si es span,div, p,a ; los que estan dentro de clase por el asterisco despues

}
*/

/*************************** fin esilos para menu hamburgesa ****************************/

/*************************** inicio de esilos para el menu de navegacion ****************************/
.menu{
    width: inherit; /*este clase menu herede la anchura de su contenedor()*/
    display: flex; /*display flex direccion columna(flex-direction: column)*/
    flex-direction: column;
    justify-content: space-evenly;/*espaciado proporcional entre los espacios de los elementos y las orillas y trabaja en columna*/
    align-items: center;/*justify-content, trabaja en horizontal"x" */
    text-align: center;/*alinear las letras*/
}
#scroll{ /*este #scroll es para generar un barra de dezplazamiento en ele menu*/
    max-height: 100%; /*no ponemos width, porque en clase .panel esta puesto*/
    overflow: auto;/*si recortar contenido, dibujar barras de desplazamiento o mostrar el contenido excedente en un elemento a nivel de bloque*/
}
.menu a{
    padding: 2rem;
    width: inherit;/*este clase menu herede la anchura de su contenedor()*/
    display: block; /*vuelvo elementos de bloque*/
    font-size: 1.5rem;
    text-decoration: none;/*quito decoracion de enlaces , etiqueta a*/
    color: var(--main-color);
    transition: all 0.3s ease; /* aplicamos transicion de 0.3 segundos*/
}
.menu a:hover{ /*al tocar el maus estos enlaces la letra cambia de estilos con hover*/
    font-weight: bold; /*letra negrita*/
    color: var(--second-color); /*color de la letra negra*/
    background-color: var(--main-modal-color);/*color de fondo amarillo un poco bajo*/
}
/*************************** fin de esilos para el menu de navegacion ****************************/

/*************************** inicio eventos del teclado ****************************/
.stage{
    display: flex;/*para empiece desde el margen inicial sobre el eje principal, contraerse    ...*/
    min-height: 50vh; /*aplico con minima altura de la mitad del view port */
    background-color: var(--second-color);/*color oscuro*/
}

.ball{
    margin: auto;
    width: 4rem;/*ancho y alto del tamaño de la pelota de tal manera que sea cuadrado*/
    height: 4rem;
    border-radius: 50%;/*con esto le volvemos en en pelota, border redondeado*/
    background-color: var(--main-color);
}
/*************************** fin eventos del teclado ****************************/

/*************************** inicio scroll-top-btn ****************************/
.scroll-top-btn{
    position: fixed;  /*nos da una posicion fija y encima de todo los elementos de dicho elemento que se aplico fixed*/
    z-index: 999; /*Cuando varios elementos se superponen, los elementos con mayor valor z-index cubren aquellos con menor valor*/
    bottom: 1vh; /*da un espaciado de abajo de 1vh(representa un porcentaje de la altura de la ventana gráfica)*/
    right: calc(4.25rem + 1vw);/* vw:representa un porcentaje del ancho de la ventana gráfica, 4.25 rem para que se retire al lado del boton(de los menus) dejando espacio*/
    width: 4rem;/*tanto el alto y ancho de este boton tiene 4 rem*/
    height: 4rem;
    border-radius: 50%;
    font-size: 2rem;/*tamaño de letra*/
    font-weight: bold; /*negrita*/
    background-color: var(--main-color); /*color amarrilo*/
    color: var(--second-color);/*colo gris medio negro*/
    cursor: pointer;/*salga mano*/
    outline: 0;/*para dibujar un borde alrededor del elemento*/
    border: 0;/*ningun borde,esta propiedad no ocupa espacio dentro del diseño, es decir, no afecta al tamaño de la caja del elemento*/
    transition: all 0.3s ease-out; /*el cambio de hover lo haga con transicion de todo los estilos, ease-out:es como aceleracion salida creo*/
}

/*invertir los colores en el boton hover del boton*/
.scroll-top-btn:hover{
    background-color: var(--second-color);
    color: var(--main-color);
}

.hidden{ /*cuando tenga la clase*/ 
    visibility: hidden; /*con hidden ocultamos el scroll-top-btn*/
    opacity: 0; /*Para ajustar la opacidad (y la transparencia) */
    /**/
}
/*************************** fin scroll-top-btn ****************************/

/*************************** inicio dark-theme-btn ****************************/
.dark-theme-btn{
    position: fixed;  /*nos da una posicion fija y encima de todo los elementos de dicho elemento que se aplico fixed*/
    z-index: 999; /*Cuando varios elementos se superponen, los elementos con mayor valor z-index cubren aquellos con menor valor*/
    bottom: 1vh; /*da un espaciado de abajo de 1vh(representa un porcentaje de la altura de la ventana gráfica)*/
    left:  1vw;/* vw:representa un porcentaje del ancho de la ventana gráfica*/
    width: 4rem;/*tanto el alto y ancho de este boton tiene 4 rem*/
    height: 4rem;
    border-radius: 50%;
    font-size: 2rem;/*tamaño de letra*/
    font-weight: bold; /*negrita*/
    background-color: var(--main-color); /*color amarrilo*/
    color: var(--second-color);/*colo gris medio negro*/
    cursor: pointer;/*salga mano*/
    outline: 0;/*para dibujar un borde alrededor del elemento*/
    border: 0;/*ningun borde,esta propiedad no ocupa espacio dentro del diseño, es decir, no afecta al tamaño de la caja del elemento*/
    transition: all 0.3s ease-out; /*el cambio de hover lo haga con transicion de todo los estilos, ease-out:es como aceleracion salida creo*/
}

/*invertir los colores en el boton hover del boton*/
.dark-theme-btn:hover{
    background-color: var(--second-color);
    color: var(--main-color);
}
.dark-mode{
    background-color: var(--second-color);/*color negro*/
    color: var(--main-color);/*amarrillo*/
}
/*************************** fin dark-theme-btn ****************************/

/*************************** INICIO: Network Status, estilos para la deteccion de linea de internet *********/
.online,
.offline {
    position: sticky; /*para q aparezca encima de la cabecera de la pagina, es como fixed, pero en este caso el menu esta debajo del slider y cuando baja se queda fijado en la parte arriba de la pagina web*/
    top:0;
    z-index: 1000;/*los demas esta con z index de 998,999*/
    padding: 1rem;
    font-size: 1.5rem;
    font-weight: bold;
    text-align: center;
    background-color: #1b5e20;/*el color de fondo*/
    color: #fff; /*color de letra*/
}

.offline{ /*los demas estilos se mantienen solo cambia en rojo el fondo cuando no hay internet*/
    background-color: #b71c1c;
}
/*************************** FIN: Network Status, estilos para la deteccion de linea de internet *********/


/************** inicio de searhc filter y tarjetas:cards *************************/  

:root{ /*root representa la etiqueta html que tiene mayor peso especifico que la etiqueta html y dentro de root se crean las variables*/
    --yellow-color:purple; /*se crea una variable, pero primero se agrega siempre dos veces guion:--, para crear una variable de css, despues, yelow-color:es el nombre*/
    --dark-color:pink; /*otra variable css y va estar todo los selectores del documento, dichas variables css*/        
}

.cards {
    margin-top: 1rem;
   /* border: thin solid var(--yellow-color); /* tenga un borde delgado=thin, solido y de color=var(--dark-color); */
    display: grid; /* display: grid te proporciona una cuadrícula de una sola columna, */
    grid-template-columns: repeat(auto-fit, minmax(250px,1fr));/*grid-template-columns:permite definir columnas, repeat:funcion que nos permite repetir varias columnas(primer parametro nos hace referencia al # de columnas que quiero repetir y el 2do prametro a su valor que va tener cada columna:250px) */
    /*resposive automatico, en la linea anterior, al poner auto-fit:en base al # de elementos hijos que tiene el elemento grid, pues como se van apilar las columnas
    minmax: es para que al elemento grid permite osiclar el tamaño, en este caso la columna, entre el tamaño minimo 250px y tamaño max que es una fraccion*/
}

.card {
    background-color: var(--second-color);
    color: var(--main-color);
    transition: all 0.3s ease-out;  /*con transicion de todo los estilos, ease-out:es como aceleracion salida creo*/
    
}
.card img{/* adicionalmente damos a la img que esta dentro de la tarjeta */
    width: 100%;/* tenga el 100% de su contenedor */
    height: auto; /* y la altura automatica para que la img no se deforme */
}

.card figcaption {
    padding: 1rem;

}

.filter{ /* para la busqueda */
    display: none; /* es como invisibilidad del elemento y quita el espacidado de ese elemento */
}
/************** fin de searhc filter  y tarjetas:cards *************************/   